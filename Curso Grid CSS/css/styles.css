html {
  box-sizing: border-box;
  font-size: 16px;
  font-family: sans-serif;
  scroll-behavior: smooth;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

a[href="#top"] {
  margin: 1rem;
  display: block;
  font-size: 2rem;
  text-align: center;
  text-decoration: none;
}

p {
  margin: 0;
}

h2 {
  margin-top: 50vh;
  text-align: center;
}

img {
  margin: auto;
  display: block;
  max-width: 100%;
  height: auto;
}

.menu {
  margin-bottom: 100vh;
  font-size: 125%;
}

.menu li {
  margin-bottom: 1rem;
}

.container {
  margin: 0 auto;
  /* Para centrar margin 0 auto
    y agregar width */
  width: 80%;
  height: 80vh;
  background-color: #222;
  border: medium solid #000;
}

.item {
  padding: 1rem;
  font-size: 1.25rem;
  background-color: #666;
  border: medium solid #999;
}

/* Aquí comienza el codigo de la clase de Grid Css 2/17*/
.grid-explicit {
  /* Para activarlo */
  display: grid;
  /* Te permite definir el numero de columanas
    Puede llevar cualquier unidad de medida
   fracción (fr) el espacio sobrante */
  /* Para definir las colunmas 5rem 38px 32 (significa tres columnas con estos valores)
    */
  grid-template-columns: 2rem 20vh 30%;

  /* Fila, y 1fr, significa espacio sobrante  */
  grid-template-rows: 50% 100px 1fr;

  /*repeat para hacer patrones   */
  /* Cinco  */
  grid-template-columns: repeat(4, 20%);
  /* el primero son las columnas y el valor auto es tamaño de la fila, para que se adapte al contenido  */
  grid-template-rows: repeat(5, auto);
  /* 
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 1fr );
    */
  /* C: columna R: row */

  /* Grid de 5x4, pero los del centro tenga mas espacio */
  grid-template-columns: 20% 30% 30% 20%;
  /* Or 
grid-template-colums: 20% repeat(2, 30%) 20% */
  grid-template-rows: repeat(5, auto);

  /* 
    grid-row-gap: ;
    Define el canal entre las filas de un contenedor de cuadrícula .*/

  /* el espacio entre las unidades*/
  column-gap: 1rem;
  row-gap: 1rem;

  /* La función de las dos es
grid-gap: 100px 0px 
primer valor la distancia entre las filas,  y el segundo es para columnas */

  grid-gap: 100px 0px;

  /* Para no tener espaciado */
  gap: 0;
}

/* Curso Grid CSS: (3/17) Posicionamiento con Grid Lines */

.grid-explicit .item:nth-child(10) {
  color: white;
  /* 
    Define la posición de inicio de fila de un elemento de la cuadrícula . 
    grid-row-start */
  /* 
    Estas son las lineas de la cuadricula, el valor de fila, y columna (lineas)
    */
  grid-row-start: 1;
  grid-row-end: 2;
  grid-column-start: 4;
  grid-column-end: 5;
  background-color: blueviolet;
}

.grid-explicit .item:nth-child(19) {
  grid-row-start: 5;
  grid-row-end: 6;
  grid-column-start: 3;
  grid-column-end: 5;
  /* Atajo de las propiedades */
  grid-row: 5/6;
  grid-column: 3/5;
  background-color: rgba(0, 0, 255, 0.418);
  /*Atajo de grid-colum, grid-row 
  grid-area: grid-row-start / grid-row-end / grid-column-start / grid-column-end
  grid-area:  5/6 / 3/5 ; */
}

.grid-explicit .item:nth-child(13) {
  /* Abarca de la posición que te encuentras y suma el numero*/
  grid-row: span 2;
  grid-column: span 2;
  background-color: aquamarine;
}
.grid-explicit .item:nth-child(18) {
  /* Usar el span para que ocupe todo el espcio y no quede espacios en blanco */
  grid-column: span 2/5;
  color: white;
  background-color: brown;
}
.grid-line-names {
  display: grid;
  /* Posicionamiento con nombres de grid linees */
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
  grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];
}
.grid-line-names .item:nth-child(3) {
  background-color: antiquewhite;
  grid-row: linea-r3/linea-r4;
  grid-column: linea-c1/linea-c4;
}

.grid-areas {
  display: grid;
  grid-template-columns: 1fr 200px;
  grid-template-rows: 100px repeat(2, 1fr) 60px;
  /* para tener tres filas */

  /* Definimos las areas 
"entre parentesis la filas" */
  grid-template-areas:
  /* Cuando tiene otra fila, simplemente agrega otra fila de contenido */
    "header header"
    "content sidebar"
    /* para dejar un espacio vacío, se pone un . y lo interpreta como vacío  */
    "content ."
    "footer footer";
}

/* Debemos llamar a los elementos */
.header {
  /* El valor que definimos  */
  grid-area: header;
  background-color: #d0eaff;
}

.content {
  grid-area: content;
  background-color: #2bf07a;
}

.sidebar {
  grid-area: sidebar;
  background-color: #e9fc1d;
}

.footer {
  grid-area: footer;
  background-color: red;
}

/* La grid implicita */

.grid-implicit {
  /* 
  El elemento comparte propiedades tanto de un elemento en línea como de un elemento de cuadrícula :

  en línea porque el elemento se comporta como texto simple y se inserta en un bloque de texto
  cuadrícula porque su elemento secundario se convertirá en elementos de flexbox
  
  display: inline-grid; */

  display: inline-grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 200px);
}
/* Flujo de la grid */

.grid-flow{
  display: grid;
  /* Grid de 5c x 4r */
  grid-template-columns: repeat(5, 1fr) ;
  grid-template-rows: repeat(3, 150px);

  /*  
  grid-auto-flow: ;

  Define la posición de los elementos de la cuadrícula generados automáticamente   */
  /* Valores 
  grid-auto-flow: row; En esta configuración de dos columnas , el segundo elemento de la cuadrícula tiene dos columnas de ancho y el tercer elemento tiene cuatro filas de alto. Los demás elementos de la cuadrícula se colocan en filas adicionales . 
  
  grid-auto-flow: column; Los demás elementos de la cuadrícula se colocan en columnas adicionales .
  
  grid-auto-flow: dense; El algoritmo denso intenta colocar todos los demás elementos de la cuadrícula de manera que llenen todos los "huecos" de la cuadrícula.
  
  referencia visual https://cssreference.io/property/grid-auto-flow/ 
  */

  /* Cuando es columna se utilizan estas propiedades
  
  grid-auto-flow: column;
  grid-auto-columns: 5px;
  

  Cuando es fila se utilizan estas propiedades 
  grid-auto-flow: row;
  grid-auto-rows: 5px;


  */
  grid-auto-flow: column;
  grid-auto-columns: 5px;
  
}
/* Para aprovechar los espacios disponibles */
.grid-flow-dense{
  display: grid;

  /* Grid de 5c x 4r  */
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(4, 150px) ;
  grid-auto-flow: row dense;

}

.grid-flow-dense .item:nth-child(9){
  background-color: aquamarine;
  grid-row: span 3;
  grid-column: span 3;
}

.grid-layers{
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
}

.grid-layers .item:nth-child(1){
  background-color: #DCEA33 ;
  grid-column: 1 / 3 ;
  grid-row: 1/3;
}
.grid-layers .item:nth-child(2){
  background-color: #497BF8 ;
  grid-column: 3/5;
  grid-row: 1/3;
}
.grid-layers .item:nth-child(3){
  background-color: #84D567 ;
  grid-column: 1 / 3 ;
  grid-row: 3/5;
}
.grid-layers .item:nth-child(4){
  background-color: #CD7F24 ;
  grid-column: 3 / 5 ;
  grid-row: 3/5;
}
.grid-layers .item:nth-child(5){
  background-color: #C929F0 ;

}
